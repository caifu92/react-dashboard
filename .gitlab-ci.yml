image: docker:latest

stages:
  - build
  - test
  - deploy
  - production

services:
  - docker:dind

variables:
  DEVELOP_IMAGE: "dctx/rapidpass-approver-develop"
  TEST_IMAGE: "dctx/rapidpass-approver-test"
  STAGE_IMAGE: "dctx/rapidpass-approver-staging"
  PROD_IMAGE: "dctx/rapidpass-approver"

docker-build:
  stage: build
  only:
    - develop
  before_script:
    - docker login -u "$ACR_USERNAME" -p "$ACR_PASSWORD" "$ACR_REGISTRY"
  script:
    - docker pull "$ACR_REGISTRY/$DEVELOP_IMAGE:latest" || true
    - docker build --cache-from "$ACR_REGISTRY/$DEVELOP_IMAGE:latest"
                   --build-arg REACT_APP_API_URL=$REACT_APP_API_URL_DEVELOP
                   --build-arg REACT_APP_API_KEY=$REACT_APP_API_KEY_DEVELOP
                   --build-arg REACT_APP_ENV=$REACT_APP_ENV_DEV
                   -t "$ACR_REGISTRY/$DEVELOP_IMAGE:latest" -t "$ACR_REGISTRY/$DEVELOP_IMAGE:$CI_BUILD_ID" .
    - docker push "$ACR_REGISTRY/$DEVELOP_IMAGE:latest"
    - docker push "$ACR_REGISTRY/$DEVELOP_IMAGE:$CI_BUILD_ID"
  environment:
    name: development
    url: https://rapidpass-approver-dev.azurewebsites.net


# We have no automated tests, so for test stage, just redeploy to test env for manual testing.
docker-test:
  stage: test
  only:
    - develop
  before_script:
    - docker login -u "$ACR_USERNAME" -p "$ACR_PASSWORD" "$ACR_REGISTRY"
  script:
    - docker pull "$ACR_REGISTRY/$TEST_IMAGE:latest" || true
    - docker build --cache-from "$ACR_REGISTRY/$TEST_IMAGE:latest"
                    --build-arg REACT_APP_API_URL=$REACT_APP_API_URL_TEST
                    --build-arg REACT_APP_API_KEY=$REACT_APP_API_KEY_TEST
                    --build-arg REACT_APP_ENV=$REACT_APP_ENV_TEST
                    -t "$ACR_REGISTRY/$TEST_IMAGE:latest" -t "$ACR_REGISTRY/$TEST_IMAGE:$CI_BUILD_ID" .
    - docker push "$ACR_REGISTRY/$TEST_IMAGE:latest"
    - docker push "$ACR_REGISTRY/$TEST_IMAGE:$CI_BUILD_ID"
  environment:
    name: test
    url: https://rapidpass-approver-test.azurewebsites.net

docker-stage:
  stage: deploy
  only:
    - /^release\/.*$/
  before_script:
    - docker login -u "$ACR_USERNAME" -p "$ACR_PASSWORD" "$ACR_REGISTRY"
  script:
    - docker pull "$ACR_REGISTRY/$STAGE_IMAGE:latest" || true
    - docker build --cache-from "$ACR_REGISTRY/$STAGE_IMAGE:latest"
                   --build-arg REACT_APP_API_URL=$REACT_APP_API_URL_STAGING
                   --build-arg REACT_APP_API_KEY=$REACT_APP_API_KEY_STAGING
                   --build-arg REACT_APP_ENV=$REACT_APP_ENV_STAGING
                   -t "$ACR_REGISTRY/$STAGE_IMAGE:latest" -t "$ACR_REGISTRY/$STAGE_IMAGE:$CI_BUILD_ID" .
    - docker push "$ACR_REGISTRY/$STAGE_IMAGE:latest"
    - docker push "$ACR_REGISTRY/$STAGE_IMAGE:$CI_BUILD_ID"
  environment:
    name: staging
    url: https://rapidpass-approver-staging.azurewebsites.net
  only:
    - /^release\/.*$/

docker-deploy:
  stage: production
  only:
    - master
  when: manual
  before_script:
    - docker login -u "$ACR_USERNAME" -p "$ACR_PASSWORD" "$ACR_REGISTRY"
  script:
    - docker pull "$ACR_REGISTRY/$PROD_IMAGE:latest" || true
    - docker build --cache-from "$ACR_REGISTRY/$PROD_IMAGE:latest"
                    --build-arg REACT_APP_API_URL=$REACT_APP_API_URL
                    --build-arg REACT_APP_API_KEY=$REACT_APP_API_KEY
                    --build-arg REACT_APP_ENV=$REACT_APP_ENV_PROD
                    -t "$ACR_REGISTRY/$PROD_IMAGE:latest" -t "$ACR_REGISTRY/$PROD_IMAGE:$CI_BUILD_ID" .
    - docker push "$ACR_REGISTRY/$PROD_IMAGE:latest"
    - docker push "$ACR_REGISTRY/$PROD_IMAGE:$CI_BUILD_ID"
  environment:
    name: production
    url: https://dashboard.rapidpass.ph
